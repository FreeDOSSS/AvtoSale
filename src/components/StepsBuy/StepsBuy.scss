@import "./../../constants/variables.scss";

.fon {
  // background-color: $colorFooter;
}

.wrp {
  padding: 30px 10px;
  padding-top: 0;
}

.title {
  text-transform: uppercase;
  color: $colorBlack;
  text-align: center;
  margin: 0;
  font-weight: 700;
  margin-bottom: 20px;
}

.subtitle {
  text-align: center;
  margin: 0;
  margin-bottom: 20px;
  text-transform: uppercase;
  color: $colorBlack;
}

.steps {
  display: flex;
  flex-wrap: wrap;
}

.step {
  width: 100%;
  padding: 10px 10px 30px;
  position: relative;
  text-align: center;
  margin-bottom: 10px;
  z-index: 20;

  display: flex;
  align-items: center;

  &:hover {
    transform: scale(1.1);
    z-index: 30;

    .discription {
      color: $colorBlack;
    }
    .svg {
      fill: $colorBlack;
    }

    &::before,
    &::after {
      background: none;
      background-color: $colorWhite;
      border: 3px solid $colorAccent;
    }

    &:first-of-type {
      border-top: 3px solid $colorAccent;
      &::before,
      &::after {
        border-top: none;
      }
    }

    &::after {
      border-right: none;
    }

    &::before {
      border-left: none;
    }
  }

  .svg {
    $size: 60px;
    fill: $colorWhite;
    width: $size;
    height: $size;
    margin-right: 10px;
    // transition-delay: 0.1s;
  }

  .discription {
    color: $colorWhite;
    text-align: left;
    font-size: 18px;
  }

  &:first-of-type {
    overflow: hidden;
  }

  &::before,
  &::after {
    z-index: -1;
    content: "";
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background-color: $colorAccent;
    transform: skewY(10deg);
  }

  &::after {
    transform-origin: right bottom;
    right: 50%;
  }

  &::before {
    transform-origin: left bottom;
    transform: skewY(-10deg);
    left: 50%;
  }
}

@media (min-width: $breakPointWidthTb) {
  .step {
    --margin: 10px;

    padding: 10px;

    width: calc(50% - var(--margin));
    margin-right: var(--margin);

    $skew: 30deg;

    &:first-of-type {
      overflow: initial;
    }

    &:nth-of-type(2n-1) {
      overflow: hidden;
    }

    &::after {
      right: 0;
      bottom: 50%;
      transform: skewX($skew) skewY(0);
    }

    &::before {
      left: 0;
      top: 50%;
      transform: skewY(0) skewX($skew * -1);
      transform-origin: right top;
    }

    &:hover {
      &:first-of-type {
        border-top: none;
        // border-left: 3px solid $colorAccent;

        &::after {
          border-top: 3px solid $colorAccent;
        }
      }

      &::after {
        border-right: 3px solid $colorAccent;
        border-bottom: none;
      }

      &::before {
        border-left: 3px solid $colorAccent;
        border-top: none;
      }

      &:nth-of-type(2n-1) {
        border-left: 3px solid $colorAccent;
        &::after,
        &::before {
          border-left: none;
        }
      }
    }
  }
}

@media (min-width: $breakPointWidthDs) {
  .step {
    --margin: 10px;

    width: calc(25% - var(--margin));
    margin-right: var(--margin);

    &:nth-of-type(2n-1) {
      overflow: initial;
    }

    &:first-of-type {
      overflow: hidden;

      &:hover {
        border-left: 3px solid $colorAccent;
      }
    }

    &:hover {
      &:nth-of-type(2n-1) {
        border-left: none;
        &::after,
        &::before {
          border-left: 3px solid $colorAccent;
        }
      }
      &:first-of-type {
        border-left: 3px solid $colorAccent;

        &::after,
        &::before {
          border-left: none;
        }
      }
    }
  }
}
